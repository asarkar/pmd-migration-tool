buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
                "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
                "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayPluginVersion"
        )
    }
}

group = "org.abhijitsarkar"
version = "1.0.2"

apply plugin: "kotlin"
apply plugin: "idea"
apply plugin: "application"
apply plugin: "maven"
apply plugin: "com.jfrog.bintray"

repositories {
    jcenter()
}

configurations {
    jaxb
}

dependencies {
    implementation(
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "com.xenomachina:kotlin-argparser:$kotlinArgparserVersion"
    )
    jaxb(
            "com.sun.xml.bind:jaxb-core:$jaxbVersion",
            "com.sun.xml.bind:jaxb-impl:$jaxbVersion",
            "com.sun.xml.bind:jaxb-xjc:$jaxbVersion"
    )
    testImplementation(
            "org.jetbrains.kotlin:kotlin-test:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    )
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

def schemaDir = "src/main/resources"
def generatedSources = "$buildDir/generated-sources"
def xjcOutputDir = "$generatedSources/java/main"

sourceSets {
    main {
        java {
            srcDirs files(xjcOutputDir) {
                builtBy("xjc")
            }
        }
    }
}

task xjc {
    inputs.dir "$schemaDir"
    outputs.dir "$xjcOutputDir"

    doLast {
        project.ant {
            taskdef(
                    name: "xjc",
                    classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath)
            xjc(
                    destdir: "$xjcOutputDir",
                    package: "net.sourceforge.pmd",
                    schema: "$schemaDir/ruleset_2_0_0.xsd",
                    binding: "$schemaDir/binding.xjb",
                    encoding: "UTF-8",
                    fork: true
            ) {
                arg(line: "-verbose")
                arg(line: "-no-header")
                arg(line: "-mark-generated")
            }
        }
    }
}

mainClassName = "org.abhijitsarkar.pmd.MainKt"
applicationDefaultJvmArgs = ["-Dcom.xenomachina.argparser.programName=$name"]

bintray {
    user = findProperty("bintrayUser")
    key = findProperty("bintrayApiKey")
    configurations = ["archives"]
    pkg {
        repo = "mvn"
        name = project.name
        desc = "Migrates a pre-PMD6 ruleset to the new format"
        websiteUrl = "https://github.com/asarkar/pmd-migration-tool"
        issueTrackerUrl = "https://github.com/asarkar/pmd-migration-tool/issues"
        vcsUrl = "https://github.com/asarkar/pmd-migration-tool.git"
        githubRepo = "asarkar/pmd-migration-tool"
        githubReleaseNotesFile = "README.md"
        labels = ["pmd", project.name]
        licenses = ["GPL-3.0"]
        publicDownloadNumbers = true
        version {
            name = project.version
            gpg {
                sign = true
            }
        }
    }
    override = true
    publish = true
    dryRun = false
}


